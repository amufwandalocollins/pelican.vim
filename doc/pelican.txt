*pelican.txt*

Author: mt3

==============================================================================
INTRODUCTION                                    *pelican*

This script is intended to automate the process of creating and editing
Pelican (http://getpelican.com/) blog posts from within vim.

==============================================================================
CONFIGURATION                                   *pelican-configuration*

There are a few global variables that can be set to adjust the way vim handles
Pelican blogs. Default values for each are listed below unless noted.

                                                *g:pelican_post_dirs*  >
    let g:pelican_post_dirs = ['_posts', '_source/_posts']
A |List| containing paths to search to identify a Pelican blog's posts
directory. For most Pelican blogs, this will be `_posts`. Octopress posts are
kept in `_source/_posts`.

                                                *g:pelican_post_extension*  >
    let g:pelican_post_extension = '.rst'
The extension used when creating new posts.

                                                *g:pelican_post_filetype*  >
    let g:pelican_post_filetype = 'liquid'
The |filetype| used when creating new posts.

                                                *g:pelican_post_template*  >
    let g:pelican_post_template =  [
      \ '---',
      \ 'layout: post',
      \ 'title: "PELICAN_TITLE"',
      \ 'date: "PELICAN_DATE"',
      \ '---',
      \ '']
A |List| containing lines to used as a template when creating new posts.
PELICAN_DATE and PELICAN_TITLE will be replaced with their real values.

                                                *g:pelican_site_dir*  >
    let g:pelican_site_dir = '_site'
Directory to place generated files in when running the |:Jbuild| command.
Relative to the root of your blog.

                                                *g:pelican_build_command*  >
    let g:pelican_build_command = 'pelican --no-auto --no-server'
Custom command to use to build your blog. By default this is unset.

==============================================================================
COMMANDS                                        *pelican-commands*

The |:Ppost| (Pelican post) command is used to create and edit blog posts. It
has variants for opening a post in a horizontal or vertical split or a new
tab. Call with a bang, (eg: :Ppost!) to create a new post. Call without a bang
(eg: :Ppost) to edit a post. The |:Pbuild| command can be used to build a
blog.

                                                *pelican-:Ppost*
:Ppost[!]  [{name}] Create or edit the specified post. With no argument, you
                    will be prompted to select a post or enter a title.

                                                *pelican-:PSpost*
:PSpost[!] [{name}] Same as |:Jpost|, but opens post in a horizontal split.

                                                *pelican-:PVpost*
:PVpost[!] [{name}] Same as |:Jpost|, but opens post in a vertical split.

                                                *pelican-:PTpost*
:PTpost[!] [{name}] Same as |:Jpost|, but opens post in a tab.

                                                *pelican-:Pbuild*
:Pbuild [{args}]    Generate blog. This will check for the presence of a
                    Gemfile; if found `bundle exec` is used to run the
                    `pelican` command. The blog will be built with: >

            pelican --no-auto --no-server BLOG_ROOT BLOG_ROOT/SITE_DIR <args>
<
                    If this doesn't fit your situation, you can set a custom
                    command with |g:pelican_build_command|. When using a custom
                    command no check for a Gemfile is performed.

==============================================================================
ABOUT                                           *pelican-about*

Grab the latest version or report a bug on Github:

https://github.com/mt3/pelican.vim

                                                *pelican-license*
Distributed under the same terms as Vim itself. See |license|.


 vim:tw=78:et:ft=help:norl:
