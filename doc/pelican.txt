*pelican.txt*

Author: mt3, edthedev

==============================================================================
INTRODUCTION                                    *pelican*

This script is intended to facilitate the process of creating and editing
Pelican (http://getpelican.com/) blog posts from within vim.

==============================================================================
CONFIGURATION                                   *pelican-configuration*

There are a few global variables that must be set to control the way pelican.vim
handles your Pelican blog. 

                                                *g:pelican_blog_source*  >
    let g:pelican_blog_source = '~/blog_source_files'

Pelican.vim needs to know where your blog source files will be stored.

                                                *g:pelican_blog_html*  >
    let g:pelican_blog_html = '~/blog_html_destination'

Pelican.vim needs to know where to place the generated HTML files (locally).

                                                *g:pelican_git_master*  >
    let g:pelican_git_master = 'http://github.com/username/blog.git'

If you store your blog source files in a Git repository, 
let Pelican.vim manage commits for you.

                                                *g:pelican_publish_server*  >
    let g:pelican_publish_server = 'username@server.domain.com:~/html_directory'

If you publish your Pelican_ blog over SSH, tell Pelican.vim the destination, 
and it can run a publish command for you.

                                                *pelican-example-vimrc*  >

    Bundle 'edthedev/pelican.vim'
    let g:pelican_blog_source = '~/blog_source_files'
    let g:pelican_blog_html = '~/blog_html_destination'
    let g:pelican_git_master = 'http://github.com/username/blog.git'
    let g:pelican_publish_server = 'username@server.domain.com:~/html_directory'

Altogether, the directives added to your ``~/.vimrc`` should looke a bit like the above example.

==============================================================================
COMMANDS                                        *pelican-commands*

If your configured ``g:pelican_blog_source`` is already a Git clone 
of ``g:pelican_git_master`` then you can proceed to using Pelican.vim. 
If not, see 'Getting Started from Scratch', below.

                                                *pelican-clone*
If necessary, clone your existing blog from your remote Git repository.

    :call pelican#clone()

                                                *pelican-pull*
Make sure the files in the directory indicated by ``g:pelican_blog_source`` 
are up to date from the latest in Git.

    :call pelican#pull()
                                                *pelican-content*
Open your Pelican content folder (that is, ``g:pelican_blog_source``), 
and make some changes to some posts.

    :call pelican#content()
                                                *pelican-commit*
Commit and push your changes back to your remote Git repository. 
The commit message will always be 'Checking in latest blog changes'.

    :call pelican#commit()

                                                *pelican-html*
Generate your blog HTML. This command requires that pelican.conf.py 
and a 'content' folder exist in folder indicated by ``g:pelican_blog_source``.

    :call pelican#rst2html()
                                                *pelican-publish*
Publish your updated HTML content, using Rsync, to your remote web server.

    :call pelican#publish()

==============================================================================
GETTING STARTED FROM SCRATCH                    *pelican-from-scratch*

Follow these instructions if you are not already using Pelican with Git.

                                                *pelican-install*
Before the first usage, you may need to install Pelican using one of:: 

    :call pelican#install()
    :call pelican#sudo_install()
                                                *pelican-init*
Create a new, local Pelican directory, and then push it to the remote Git repository::

    :call pelican#initblog()

                                                *pelican-config*
Configure your new Pelican blog by opening ``pelicanconf.py``::

    :call pelican#config()

==============================================================================
ABOUT                                           *pelican-about*

Grab the latest version or report a bug on Github:

https://github.com/edthedev/pelican.vim

                                                *pelican-license*
Distributed under the same terms as Vim itself. See |license|.


 vim:tw=78:et:ft=help:norl:
